<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Wvw3RpmNAAAAAElFTkSuQmCC
</value>
  </data>
</root>